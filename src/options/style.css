:root {
  --white: #fff;
  --black: #212529;
  --blue: #0d6efd;
  --dark-blue: #0c5ae9;
  --red: #ec474f;
  --dark-red: #dc3545;
}

*,
*::before,
*::after {
  box-sizing: border-box;
}

body {
  text-align: center;
  line-height: 1.5;
  font-size: 1rem;
  font-family: 'Roboto', sans-serif;
  color: var(--black);
  background-color: #dfdbe5;
  background-image: url('floating-cogs.svg');

  display: grid;
  grid-auto-columns: 1fr 3fr 1fr;
  grid-auto-rows: auto 1fr;
  grid-template-areas:
    'support header blank'
    'blank1 container blank';
  place-items: center;
  height: 100vh;
  text-wrap: balance;

  & aside {
    grid-area: support;
    display: flex;
    flex-direction: column;
    align-items: center;
    gap: 5px;
    padding: 10px;
  }

  & header {
    grid-area: header;
    justify-self: center;
  }

  & main {
    grid-area: container;
    align-self: start;
    text-align: center;
    justify-content: center;
  }
}

@media screen and (max-width: 800px) {
  body {
    grid-auto-columns: 1fr;
    grid-auto-rows: auto auto 1fr;
    grid-template-areas:
      'header'
      'support'
      'container';
  }
}

@media screen and (800px <= width <= 1200px) {
  body {
    grid-template-areas:
      'support header blank'
      'container container container';
  }
}

aside {
  & a {
    cursor: pointer;
  }
  & p {
    margin: 0;

    a#rate-us {
      color: #18272f;
      position: relative;
      text-decoration: none;
      display: inline-block;

      &::before {
        content: '';
        position: absolute;
        width: 100%;
        height: 4px;
        border-radius: 4px;
        background-color: #18272f;
        bottom: -4px; /* Adjust as necessary */
        left: 0;
        transform-origin: right;
        transform: scaleX(0);
        transition: transform 0.3s ease-in-out;
      }

      &:hover::before {
        transform-origin: left;
        transform: scaleX(1);
      }
    }
  }
}

button {
  --color: var(--blue);
  --active-color: var(--dark-blue);
  cursor: pointer;
  border: 1px solid;
  background-color: var(--color);
  border-color: var(--color);
  color: var(--white);
  padding: 0.375rem 0.75rem;
  border-radius: 0.375rem;
}

button:hover,
button:focus,
button:active {
  background-color: var(--active-color);
  border-color: var(--active-color);
}

button.danger {
  --color: var(--red);
  --active-color: var(--dark-red);
}

label {
  user-select: none;
  text-wrap: pretty;

  &:has(input[type='checkbox']) {
    align-self: flex-start;
    cursor: pointer;
  }

  & input {
    margin-left: 0.5rem;
  }
}

input[type='checkbox'] {
  cursor: pointer;
}

.container {
  display: grid;
  grid-auto-columns: 1fr;
  grid-auto-rows: minmax(200px, 1fr) auto;
  grid-template-areas:
    'seconds'
    'checkboxs'
    'buttons';
  place-content: center;
  place-items: center;

  margin-top: 2rem;
  gap: 1.5rem;
  height: 100%;

  & > * {
    padding: 10px;
  }

  & label[for='override-keys'] {
    cursor: pointer;
  }
}

@media screen and (max-width: 800px) {
  .container {
    grid-auto-columns: 1fr;
    grid-auto-rows: minmax(100px, 1fr) auto;
    grid-template-areas:
      'seconds'
      'checkboxs'
      'buttons';
    margin-top: 0.5rem;
    gap: 0.5rem;

    & label {
      &:has(input[type='checkbox']) {
        align-self: center;
      }
    }
  }

  .button-container {
    align-self: start;
  }
}

.seconds-change-container {
  grid-area: seconds;
  display: flex;
  gap: 0.5rem;
  flex-direction: column;
  place-content: space-evenly;
  place-items: center;
  height: max-content;
}

.checkbox-container {
  grid-area: checkboxs;
  display: flex;
  gap: 0.5rem;
  flex-direction: column;
  align-items: start;
}

.button-container {
  grid-area: buttons;
  display: flex;
  flex-direction: row;
  justify-content: center;
  gap: 10px;
  padding: 10px;
}

.icon {
  height: 1rem;
  vertical-align: text-top;
}
